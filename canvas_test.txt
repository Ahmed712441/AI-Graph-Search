        # num_of_children = len(self.__children)
        # margin = num_of_children // 2

        # if(num_of_children%2==0):
        #     pass

        # else:
        #     place = -num_of_children

        # if not children:
        #     node = TreeNodeTest(self.__canvas,self.__level+1, self.__x,self,self.__max_width)
        #     node.draw()
        #     children += node
        # else:
        #     node = TreeNodeTest(self.__canvas,self.__level+1, self.__x,self,self.__max_width)
        #     node.draw()
        #     children += node


    # def __reset_pos(self,num_of_nodes):
        
    #     free_space = self.__max_width - (num_of_nodes)*TREE_NODE_RADUIS*2
    #     spacing = free_space / (num_of_nodes-1)
    #     new_pos = self.__left + TREE_NODE_RADUIS
        
    #     for child in self.__children:
    #         child.move_to(new_pos)
    #         new_pos = new_pos + 2*TREE_NODE_RADUIS + spacing
            
            
    #     return new_pos , spacing